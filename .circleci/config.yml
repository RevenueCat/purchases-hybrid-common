# For a detailed guide to building and testing on iOS, read the docs:
# https://circleci.com/docs/2.0/testing-ios/

version: 2.1

release-tags: &release-tags
  filters:
    tags:
      only: /^(\d+\.)(\d+\.)(\d+)$/
    branches:
      ignore: /.*/

orbs:
  android: circleci/android@1.0.3
  revenuecat: revenuecat/sdks-common-config@1.0.0
  macos: circleci/macos@2.0.1

executors:
  ios-executor:
    resource_class: macos.x86.medium.gen2
    working_directory: ~/ios
    macos:
      xcode: 13.2.1

commands:
  trust-github-key:
    steps:
      - run:
          name: Trust GitHub key
          command: |
              for ip in $(dig @8.8.8.8 github.com +short); \
              do ssh-keyscan github.com,$ip; \
              ssh-keyscan $ip; \
              done 2>/dev/null >> ~/.ssh/known_hosts

jobs:
  test-ios:
    executor: ios-executor
    steps:
      - checkout
      - run:
          name: Install pods
          command: pod install
          working_directory: ios/PurchasesHybridCommon
      - run:
          name: Run ios tests
          command: fastlane scan
          working_directory: ios/PurchasesHybridCommon
          environment:
            SCAN_SCHEME: PurchasesHybridCommonTests
      - run:
          name: Run pod lint tests
          command: pod lib lint
      - store_test_results:
          working_directory: ios/PurchasesHybridCommon
          path: test_output
      - store_artifacts:
          working_directory: ios/PurchasesHybridCommon
          path: test_output
          destination: scan-output
  
  deploy-ios:
    executor: ios-executor
    shell: /bin/bash --login -o pipefail
    steps:
      - checkout
      - trust-github-key
      # Bundler
      - restore_cache:
          keys: 
            - v1-gem-cache-{{ checksum "Gemfile.lock" }}
      - run: 
          name: Bundle install
          command: |
              bundle config set --local clean 'true'
              bundle config set --local path 'vendor/bundle'
              bundle install
      - save_cache:
          key: v1-gem-cache-{{ checksum "Gemfile.lock" }}
          paths:
            - vendor/bundle
      - run:
          name: Deploy new version
          command: bundle exec fastlane ios release

  test-android:
    executor:
      name: android/android-machine
      resource-class: large
    working_directory: ~/purchases-hybrid-common/android
    steps:
      - checkout:
          path: ~/purchases-hybrid-common
      - revenuecat/prepare-android
      - run:
          name: Run Tests
          command: ./gradlew lint test
      - android/save-build-cache
      - store_artifacts:
          path: build/reports
      - store_test_results:
          path: build/test-results

  deploy-android:
    executor:
      name: android/android-machine
      resource-class: large
    steps:
      - checkout
      - android/accept-licenses
      - restore_cache:
          key: jars-{{ checksum "android/build.gradle" }}
      - android/restore-build-cache
      - run:
          name: Deployment
          command: |
            REPO="purchases-hybrid-common"
            USERNAME="RevenueCat"
            JDK="oraclejdk8"

            if [ "$CIRCLE_PROJECT_REPONAME" != "$REPO" ]; then
              echo "Skipping snapshot deployment: wrong repository. Expected '$REPO' but was '$CIRCLE_PROJECT_REPONAME'."
            elif [ "$CIRCLE_PROJECT_USERNAME" != "$USERNAME" ]; then
              echo "Skipping snapshot deployment: wrong owner. Expected '$USERNAME' but was '$CIRCLE_PROJECT_USERNAME'."
            elif [ "$CIRCLE_JDK_VERSION" != "$JDK" ]; then
              # $CIRCLE_JDK_VERSION must be manually set in circle.yml
              echo "Skipping snapshot deployment: wrong JDK. Expected '$JDK' but was '$CIRCLE_JDK_VERSION'."
            else
              echo "Deploying snapshot..."
              ./gradlew androidSourcesJar androidJavadocJar publish --no-daemon --no-parallel\
              -Psigning.keyId=$GPG_SIGNING_KEY_ID \
              -Psigning.password=$GPG_SIGNING_KEY_PW \
              -Psigning.secretKeyRingFile=./secring.gpg \
              -PmavenCentralUsername=$SONATYPE_NEXUS_TOKEN_USERNAME \
              -PmavenCentralPassword=$SONATYPE_NEXUS_TOKEN_PASSWORD \
              -PRELEASE_SIGNING_ENABLED=true
              ./gradlew closeAndReleaseRepository\
              -Psigning.keyId=$GPG_SIGNING_KEY_ID \
              -Psigning.password=$GPG_SIGNING_KEY_PW \
              -Psigning.secretKeyRingFile=./secring.gpg \
              -PmavenCentralUsername=$SONATYPE_NEXUS_TOKEN_USERNAME \
              -PmavenCentralPassword=$SONATYPE_NEXUS_TOKEN_PASSWORD \
              -PRELEASE_SIGNING_ENABLED=true
              echo "Snapshot deployed!"
            fi
          working_directory: android

workflows:
  version: 2
  ios:
    jobs:
      - test-ios
      - deploy-ios: *release-tags

  android:
    jobs:
      - test-android
      - deploy-android: *release-tags
