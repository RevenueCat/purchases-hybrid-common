# For a detailed guide to building and testing on iOS, read the docs:
# https://circleci.com/docs/2.0/testing-ios/

orbs:
  android: circleci/android@1.0.3
  revenuecat: revenuecat/sdks-common-config@2.2.0
  macos: circleci/macos@2.0.1
  node: circleci/node@5.1.0

version: 2.1

aliases:
  base-ios-job: &base-ios-job
    resource_class: macos.x86.medium.gen2
    macos:
      xcode: << parameters.xcode_version >>
    parameters:
      xcode_version:
        type: string
        default: 14.3.0
    working_directory: ~/ios
    shell: /bin/bash --login -o pipefail
  release-tags: &release-tags
    filters:
      tags:
        ignore:
          - /^.*-SNAPSHOT/
          - latest
          - /^.*-amazon*/
      branches:
        ignore: /.*/
  release-branches: &release-branches
    filters:
      tags:
        ignore: /.*/
      branches:
        only: /^release\/.*/

parameters:
  action:
    type: enum
    enum: [ build, dependency-update, bump ]
    default: build

commands:
  setup-git-credentials:
     steps:
       - run:
           name: Setup Git config
           command: |
             git config user.email $GIT_EMAIL
             git config user.name $GIT_USERNAME

  trust-github-key:
    steps:
      - run:
          name: Trust GitHub key
          command: |
              for ip in $(dig @8.8.8.8 github.com +short); \
              do ssh-keyscan github.com,$ip; \
              ssh-keyscan $ip; \
              done 2>/dev/null >> ~/.ssh/known_hosts

  copy-npm-rc:
    steps:
      - run:
          name: Copy npmrc sample file to final location
          command: cp typescript/.npmrc.SAMPLE typescript/.npmrc

jobs:
  test-ios:
    <<: *base-ios-job
    steps:
      - checkout
      - run:
          name: Install pods
          command: pod install --repo-update
          working_directory: ios/PurchasesHybridCommon
      - run:
          name: Run ios tests
          command: fastlane scan
          working_directory: ios/PurchasesHybridCommon
          environment:
            SCAN_SCHEME: PurchasesHybridCommon
      - run:
          name: Run pod lint tests
          command: pod lib lint --fail-fast
      - store_test_results:
          path: ios/PurchasesHybridCommon/test_output
      - store_artifacts:
          path: ios/PurchasesHybridCommon/test_output
          destination: scan-output

  integration-test-ios:
    <<: *base-ios-job
    steps:
      - checkout
      - revenuecat/install-gem-mac-dependencies:
          cache-version: v1
      - run:
          name: Install pods
          command: pod install
          working_directory: ios/PurchasesHybridCommon
      - run:
          name: Update API key
          command: bundle exec fastlane ios replace_api_key_integration_tests
      - run:
          name: Run ios tests
          command: bundle exec fastlane scan --result_bundle=true --testplan=CI
          working_directory: ios/PurchasesHybridCommon
          environment:
            SCAN_SCHEME: PurchasesHybridCommonIntegrationTests
      - run:
          name: Compress result bundle
          command: |
             tar -czf test_output/xcresult.tar.gz test_output/PurchasesHybridCommonIntegrationTests.xcresult && \
             rm -r test_output/PurchasesHybridCommonIntegrationTests.xcresult
          working_directory: ios/PurchasesHybridCommon
          when: always
      - store_test_results:
          path: ios/PurchasesHybridCommon/test_output
      - store_artifacts:
          path: ios/PurchasesHybridCommon/test_output
          destination: scan-output
  
  deploy-ios:
    <<: *base-ios-job
    steps:
      - checkout
      - trust-github-key
      # Bundler
      - restore_cache:
          keys: 
            - v1-gem-cache-{{ checksum "Gemfile.lock" }}
      - run: 
          name: Bundle install
          command: |
              bundle config set --local clean 'true'
              bundle config set --local path 'vendor/bundle'
              bundle install
      - save_cache:
          key: v1-gem-cache-{{ checksum "Gemfile.lock" }}
          paths:
            - vendor/bundle
      - run:
          name: Install pods
          command: pod install
          working_directory: ios/PurchasesHybridCommon

  push-pods:
    <<: *base-ios-job
    steps:
      - checkout
      - revenuecat/install-gem-mac-dependencies:
          cache-version: v1
      - trust-github-key
      - run:
          name: Deploy new version to Cocoapods
          command: bundle exec fastlane ios push_pods
          no_output_timeout: 30m

  detekt-android:
    executor:
      name: android/android-machine
      resource-class: large
    working_directory: ~/purchases-hybrid-common/android
    shell: /bin/bash --login -o pipefail
    steps:
      - checkout:
          path: ~/purchases-hybrid-common
      - revenuecat/prepare-android
      - android/restore-gradle-cache
      - run:
          name: Detekt
          command: ./gradlew detekt
      - android/save-gradle-cache

  test-android:
    executor:
      name: android/android-machine
      resource-class: large
    working_directory: ~/purchases-hybrid-common/android
    steps:
      - checkout:
          path: ~/purchases-hybrid-common
      - revenuecat/prepare-android
      - run:
          name: Run Tests
          command: ./gradlew lint test
      - android/save-build-cache
      - store_artifacts:
          path: build/reports
      - store_test_results:
          path: build/test-results

  deploy-android:
    executor:
      name: android/android-machine
      resource-class: large
    steps:
      - checkout
      - revenuecat/install-gem-unix-dependencies:
          cache-version: v1
      - android/accept-licenses
      - restore_cache:
          key: jars-{{ checksum "android/build.gradle" }}
      - android/restore-build-cache
      - run:
          name: Deployment
          command: bundle exec fastlane android deploy

  deploy-typescript:
    executor: node/default
    steps:
      - checkout
      - revenuecat/install-gem-unix-dependencies:
          cache-version: v1
      - node/install:
          install-yarn: true
      - copy-npm-rc
      - run:
          name: Deploy typescript interfaces NPM package
          command: bundle exec fastlane typescript deploy

  make-github-release:
    docker:
      - image: cimg/ruby:3.1.2
    steps:
      - checkout
      - attach_workspace:
          at: .
      - revenuecat/install-gem-unix-dependencies:
          cache-version: v1
      - run:
          name: Make GitHub release for current version
          command: bundle exec fastlane github_release_current
  
  dependency-update:
    docker:
      - image: cimg/ruby:3.1.2
    steps:
      - checkout
      - attach_workspace:
          at: .
      - setup-git-credentials
      - trust-github-key
      - revenuecat/install-gem-unix-dependencies:
          cache-version: v1
      - run:
          name: Update dependencies to latest versions
          command: bundle exec fastlane open_pr_upgrading_dependencies
  
  tag-release-branch:
    docker:
      - image: cimg/ruby:3.1.2
    working_directory: ~/purchases-ios
    shell: /bin/bash --login -o pipefail
    steps:
      - checkout
      - setup-git-credentials
      - trust-github-key
      - revenuecat/install-gem-unix-dependencies:
          cache-version: v1
      - run: 
          name: Tag branch
          command: bundle exec fastlane tag_current_branch

  release:
    docker:
      - image: cimg/ruby:3.1.2
    steps:
      - checkout
      - setup-git-credentials
      - trust-github-key
      - revenuecat/install-gem-unix-dependencies:
          cache-version: v1
      - run:
          name: Automatically bump release and create release PR
          command: bundle exec fastlane automatic_bump github_rate_limit:10

  trigger-dependent-updates:
    docker:
      - image: cimg/ruby:3.1.2
    steps:
      - checkout
      - setup-git-credentials
      - trust-github-key
      - revenuecat/install-gem-unix-dependencies:
          cache-version: v1
      - run:
          name: Kick off Flutter automatic dependency update
          command: bundle exec fastlane bump_hybrid_dependencies repo_name:purchases-flutter
          when: always
      - run:
          name: Kick off React Native automatic dependency update
          command: bundle exec fastlane bump_hybrid_dependencies repo_name:react-native-purchases
          when: always
      - run:
          name: Kick off Cordova automatic dependency update
          command: bundle exec fastlane bump_hybrid_dependencies repo_name:cordova-plugin-purchases
          when: always

  typescript-lint:
    executor: node/default
    working_directory: ~/purchases-hybrid-common/typescript
    steps:
      - checkout:
          path: ~/purchases-hybrid-common
      - node/install:
          install-yarn: true
      - run:
          command: yarn && yarn eslint

workflows:
  version: 2
  test:
    when:
      not:
        equal: [ scheduled_pipeline, << pipeline.trigger_source >> ]
    jobs:
      - test-ios
      - integration-test-ios
      - test-android
      - detekt-android
      - typescript-lint

  deploy:
    when:
      not:
        equal: [ scheduled_pipeline, << pipeline.trigger_source >> ]
    jobs:
      - hold:
          type: approval
          <<: *release-branches
      - tag-release-branch:
          requires:
            - hold
          <<: *release-branches
      - deploy-ios:
          <<: *release-tags
      - deploy-android:
          <<: *release-tags
      - deploy-typescript:
          <<: *release-tags
      - make-github-release:
          <<: *release-tags
          requires:
            - deploy-ios
            - deploy-android
            - deploy-typescript
      - push-pods:
          <<: *release-tags
          requires:
            - make-github-release
      - trigger-dependent-updates:
          <<: *release-tags
          requires:
            - push-pods
  
  weekly-run-workflow:
    when:
      and:
        - equal: [ scheduled_pipeline, << pipeline.trigger_source >> ]
        - equal: [ "update-native-dependencies", << pipeline.schedule.name >> ]
    jobs:
      - dependency-update 

  trigger-dependency-update:
    when:
      equal: [ dependency-update, << pipeline.parameters.action >> ]
    jobs:
      - dependency-update

  danger:
    when:
      not:
        equal: [ scheduled_pipeline, << pipeline.trigger_source >> ]
    jobs:
      - revenuecat/danger

  automatic-release:
    when:
      not:
        equal: [ scheduled_pipeline, << pipeline.trigger_source >> ]
    jobs:
      - release:
          filters:
            tags:
              ignore: /.*/
            branches:
              only: main

  trigger-bump:
    when:
      equal: [ bump, << pipeline.parameters.action >> ]
    jobs:
      - release
