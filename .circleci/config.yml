# For a detailed guide to building and testing on iOS, read the docs:
# https://circleci.com/docs/2.0/testing-ios/

version: 2.1

orbs:
  android: circleci/android@0.2.1
  revenuecat: revenuecat/sdks-common-config@1.0.0

executors:
  android-executor:
    docker:
      - image: circleci/android:api-28-alpha
    working_directory: ~/android
    environment:
      JVM_OPTS: -Xmx3200m
      CIRCLE_JDK_VERSION: oraclejdk8

  ios-executor:
    working_directory: ~/ios
    macos:
      xcode: 12.0

jobs:
  test-ios:
    executor: ios-executor
    steps:
      - checkout
      - run:
          name: Install pods
          command: pod install
          working_directory: ios/PurchasesHybridCommon
      - run:
          name: Run ios tests
          command: fastlane scan
          working_directory: ios/PurchasesHybridCommon
          environment:
            SCAN_SCHEME: PurchasesHybridCommonTests
      - store_test_results:
          working_directory: ios/PurchasesHybridCommon
          path: test_output
      - store_artifacts:
          working_directory: ios/PurchasesHybridCommon
          path: test_output
          destination: scan-output

  test-android:
    executor: android-executor
    working_directory: ~/purchases-hybrid-common/android
    steps:
      - checkout:
          path: ~/purchases-hybrid-common
      - revenuecat/prepare-android
      - run:
          name: Run Tests
          command: ./gradlew lint test
      - android/save-build-cache
      - store_artifacts:
          path: build/reports
      - store_test_results:
          path: build/test-results

  deploy-android:
    executor: android-executor
    steps:
      - checkout
      - android/accept-licenses
      - restore_cache:
          key: jars-{{ checksum "android/build.gradle" }}
      - android/restore-build-cache
      - run:
          name: Deployment
          command: |
            REPO="purchases-hybrid-common"
            USERNAME="RevenueCat"
            JDK="oraclejdk8"

            if [ "$CIRCLE_PROJECT_REPONAME" != "$REPO" ]; then
              echo "Skipping snapshot deployment: wrong repository. Expected '$REPO' but was '$CIRCLE_PROJECT_REPONAME'."
            elif [ "$CIRCLE_PROJECT_USERNAME" != "$USERNAME" ]; then
              echo "Skipping snapshot deployment: wrong owner. Expected '$USERNAME' but was '$CIRCLE_PROJECT_USERNAME'."
            elif [ "$CIRCLE_JDK_VERSION" != "$JDK" ]; then
              # $CIRCLE_JDK_VERSION must be manually set in circle.yml
              echo "Skipping snapshot deployment: wrong JDK. Expected '$JDK' but was '$CIRCLE_JDK_VERSION'."
            else
              echo "Deploying snapshot..."
              ./gradlew androidSourcesJar androidJavadocsJar uploadArchives \
              -Psigning.keyId=$GPG_SIGNING_KEY_ID \
              -Psigning.password=$GPG_SIGNING_KEY_PW \
              -Psigning.secretKeyRingFile=./secring.gpg \
              -PSONATYPE_NEXUS_USERNAME=$SONATYPE_NEXUS_USERNAME \
              -PSONATYPE_NEXUS_PASSWORD=$SONATYPE_NEXUS_PASSWORD \
              -PRELEASE_SIGNING_ENABLED=true
              echo "Snapshot deployed!"
            fi
          working_directory: android

workflows:
  version: 2
  ios:
    jobs:
      - test-ios

  android:
    jobs:
      - test-android
  
  android-deploy-on-tag:
    jobs:
      - test-android:
          filters:
            tags:
              only: /^(\d+\.)(\d+\.)(\d+)$/
            branches:
              ignore: /.*/
      - deploy-android:
          requires:
            - test-android
          filters:
            tags:
              only: /^(\d+\.)(\d+\.)(\d+)$/
            branches:
              ignore: /.*/
