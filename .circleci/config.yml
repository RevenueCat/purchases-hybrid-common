# For a detailed guide to building and testing on iOS, read the docs:
# https://circleci.com/docs/2.0/testing-ios/

version: 2.1

aliases:
  release-tags: &release-tags
    filters:
      tags:
        only: /^(\d+\.)(\d+\.)(\d+)$/
      branches:
        ignore: /.*/

orbs:
  android: circleci/android@1.0.3
  revenuecat: revenuecat/sdks-common-config@1.0.0
  macos: circleci/macos@2.0.1

executors:
  ios-executor:
    resource_class: macos.x86.medium.gen2
    working_directory: ~/ios
    macos:
      xcode: 13.2.1

commands:
  trust-github-key:
    steps:
      - run:
          name: Trust GitHub key
          command: |
              for ip in $(dig @8.8.8.8 github.com +short); \
              do ssh-keyscan github.com,$ip; \
              ssh-keyscan $ip; \
              done 2>/dev/null >> ~/.ssh/known_hosts

  install-gems:
    steps:
      - restore_cache:
          key: 1-gems-{{ checksum "Gemfile.lock" }}
      - run: bundle check || bundle install --path vendor/bundle
      - save_cache:
          key: 1-gems-{{ checksum "Gemfile.lock" }}
          paths:
            - vendor/bundle

jobs:
  test-ios:
    executor: ios-executor
    steps:
      - checkout
      - run:
          name: Install pods
          command: pod install --repo-update
          working_directory: ios/PurchasesHybridCommon
      - run:
          name: Run ios tests
          command: fastlane scan
          working_directory: ios/PurchasesHybridCommon
          environment:
            SCAN_SCHEME: PurchasesHybridCommon
      - run:
          name: Run pod lint tests
          command: pod lib lint
      - store_test_results:
          path: ios/PurchasesHybridCommon/test_output
      - store_artifacts:
          path: ios/PurchasesHybridCommon/test_output
          destination: scan-output

  integration-test-ios:
    executor: ios-executor
    steps:
      - checkout
      - install-gems
      - run:
          name: Install pods
          command: pod install
          working_directory: ios/PurchasesHybridCommon
      - run:
          name: Update API key
          command: bundle exec fastlane ios replace_api_key_integration_tests
      - run:
          name: Run ios tests
          command: bundle exec fastlane scan --result_bundle=true --testplan=CI
          working_directory: ios/PurchasesHybridCommon
          environment:
            SCAN_SCHEME: PurchasesHybridCommonIntegrationTests
      - run:
          name: Compress result bundle
          command: |
             tar -czf test_output/xcresult.tar.gz test_output/PurchasesHybridCommonIntegrationTests.xcresult && \
             rm -r test_output/PurchasesHybridCommonIntegrationTests.xcresult
          working_directory: ios/PurchasesHybridCommon
          when: always
      - store_test_results:
          path: ios/PurchasesHybridCommon/test_output
      - store_artifacts:
          path: ios/PurchasesHybridCommon/test_output
          destination: scan-output
  
  deploy-ios:
    executor: ios-executor
    shell: /bin/bash --login -o pipefail
    steps:
      - checkout
      - trust-github-key
      # Bundler
      - restore_cache:
          keys: 
            - v1-gem-cache-{{ checksum "Gemfile.lock" }}
      - run: 
          name: Bundle install
          command: |
              bundle config set --local clean 'true'
              bundle config set --local path 'vendor/bundle'
              bundle install
      - save_cache:
          key: v1-gem-cache-{{ checksum "Gemfile.lock" }}
          paths:
            - vendor/bundle
      - run:
          name: Install pods
          command: pod install
          working_directory: ios/PurchasesHybridCommon
      - run:
          name: Deploy new version
          command: bundle exec fastlane ios release
          no_output_timeout: 30m
      - persist_to_workspace:
          root: .
          paths:
            - PurchasesHybridCommon.framework.zip

  test-android:
    executor:
      name: android/android-machine
      resource-class: large
    working_directory: ~/purchases-hybrid-common/android
    steps:
      - checkout:
          path: ~/purchases-hybrid-common
      - revenuecat/prepare-android
      - run:
          name: Run Tests
          command: ./gradlew lint test
      - android/save-build-cache
      - store_artifacts:
          path: build/reports
      - store_test_results:
          path: build/test-results

  deploy-android:
    executor:
      name: android/android-machine
      resource-class: large
    steps:
      - checkout
      - install-gems
      - android/accept-licenses
      - restore_cache:
          key: jars-{{ checksum "android/build.gradle" }}
      - android/restore-build-cache
      - run:
          name: Deployment
          command: bundle exec fastlane android deploy

  make-github-release:
    docker:
      - image: cimg/ruby:2.7.2
    steps:
      - checkout
      - attach_workspace:
          at: .
      - install-gems
      - run:
          name: Make GitHub release for current version
          command: bundle exec fastlane github_release_current

workflows:
  version: 2
  test:
    jobs:
      - test-ios
      - integration-test-ios
      - test-android

  deploy:
    jobs:
      - deploy-ios:
          <<: *release-tags
      - deploy-android:
          <<: *release-tags
      - make-github-release:
          <<: *release-tags
          requires:
            - deploy-ios
            - deploy-android