# This file contains the fastlane.tools configuration
# You can find the documentation at https://docs.fastlane.tools
#
# For a list of all available actions, check out
#
#     https://docs.fastlane.tools/actions
#
# For a list of all available plugins, check out
#
#     https://docs.fastlane.tools/plugins/available-plugins
#

# Uncomment the line if you want fastlane to automatically update itself
# update_fastlane

desc "Increment build number and update changelog"
lane :bump_and_update_changelog do |options|
  new_version_number = options[:version]
  sh "fastlane ios bump version:#{new_version_number}"
  sh "fastlane android bump version:#{new_version_number}"
  attach_changelog_to_master
end

platform :ios do
  desc "Increment build number"
  lane :bump do |options|
    new_version_number = options[:version]
    fail ArgumentError, "missing version" unless new_version_number
    previous_version_number = get_version_number(xcodeproj: "ios/PurchasesHybridCommon/PurchasesHybridCommon.xcodeproj")
    increment_version_number(version_number: new_version_number, xcodeproj: "ios/PurchasesHybridCommon/PurchasesHybridCommon.xcodeproj")
    version_bump_podspec(path: "PurchasesHybridCommon.podspec", version_number: new_version_number)
  end
end

platform :android do
  desc "Increment build number"
  lane :bump do |options|
    new_version = options[:version]
    fail ArgumentError, "missing version" unless new_version
    gradle_file_path = "android/build.gradle"
    previous_version = android_get_version_name(gradle_file: gradle_file_path)
    android_set_version_name(version_name: new_version, gradle_file: gradle_file_path)
    increment_version_in(previous_version, new_version, '../android/gradle.properties')
  end
end

def attach_changelog_to_master
  current_changelog = File.open("../CHANGELOG.latest.md", 'r')
  master_changelog = File.open("../CHANGELOG.md", 'r')

  current_changelog_data = current_changelog.read
  master_changelog_data = master_changelog.read

  current_changelog.close  
  master_changelog.close

  File.open("../CHANGELOG.md", 'w') { |master_changelog_write_mode|
    whole_file_data = "#{current_changelog_data}\n#{master_changelog_data}"
    puts "going to save. Contents - #{whole_file_data}"
    
    master_changelog_write_mode.write(whole_file_data)
  }
end

def increment_version_in(previous_version, new_version, path)
  sed_regex = 's|' + previous_version + '|' + new_version + '|'
  backup_extension = '.bck'
  sh("sed", '-i', backup_extension, sed_regex, path)
end