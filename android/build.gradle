import io.gitlab.arturbosch.detekt.Detekt
import io.gitlab.arturbosch.detekt.DetektCreateBaselineTask

// Top-level build file where you can add configuration options common to all sub-projects/modules.

buildscript {
    ext.android_tools = '7.4.0'
    ext.kotlin_version = '1.7.21'
    ext.android_junit5_version = '1.8.2.0'
    ext.junit5 = '5.8.2'
    ext.assertj_version = '3.22.0'
    ext.mockk_version = '1.12.8'
    ext.gradle_maven_publish = '0.22.0'
    ext.purchases_version = '6.9.4'
    ext.detekt_version = '1.23.0'

    repositories {
        google()
        mavenCentral()
    }
    dependencies {
        classpath "com.android.tools.build:gradle:$android_tools"
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath "de.mannodermaus.gradle.plugins:android-junit5:$android_junit5_version"
        classpath "com.vanniktech:gradle-maven-publish-plugin:$gradle_maven_publish"
    }
}

plugins {
    id "io.gitlab.arturbosch.detekt" version "$detekt_version"
}

apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: "de.mannodermaus.android-junit5"
apply plugin: "com.vanniktech.maven.publish"

dependencies {
    detektPlugins "io.gitlab.arturbosch.detekt:detekt-formatting:$detekt_version"
}

android {
    namespace 'com.revenuecat.purchases.hybridcommon'
    compileSdkVersion 33
    buildToolsVersion "32.0.0"

    defaultConfig {
        minSdkVersion 14
        targetSdkVersion 33
        versionCode 1
        versionName "6.1.3"

        consumerProguardFiles 'consumer-rules.pro'
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    // Add Kotlin source directory to all source sets
    sourceSets.each {
        it.java.srcDirs += "src/$it.name/kotlin"
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
}

detekt {
    buildUponDefaultConfig = true
    baseline = file("config/detekt/detekt-baseline.xml")
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'androidx.annotation:annotation:1.3.0'

    api "com.revenuecat.purchases:purchases:$purchases_version"
    api "com.revenuecat.purchases:purchases-store-amazon:$purchases_version"

    // assertion
    testImplementation "org.jetbrains.kotlin:kotlin-test:$kotlin_version"

    testImplementation "org.assertj:assertj-core:$assertj_version"

    testImplementation "io.mockk:mockk:$mockk_version"

    // junit 5
    testImplementation("org.junit.jupiter:junit-jupiter-api:5.8.2")
    testRuntimeOnly("org.junit.jupiter:junit-jupiter-engine:5.8.2")
}

repositories {
    google()
    mavenCentral()
}

// Call passing parameter -PpurchasesPath="$HOME/Development/repos/purchases-android"
task enableLocalBuild {
    group = 'Tools'
    description = 'Enable composite build'
    doLast {
        new File(".composite-enable").text = purchasesPath
    }
}

task disableLocalBuild {
    group = 'Tools'
    description = 'Disable composite build'
    doLast {
        File file = file(".composite-enable")
        if (file.exists()) {
            file.delete()
        }
    }
}
